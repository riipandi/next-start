# yaml-language-server: $schema=https://json.schemastore.org/github-action.json

# @reference: https://stackoverflow.com/questions/59813998/github-actions-splitting-workflow-file
# @reference: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: setup-sdk
description: Prepare development environment

inputs:
  nodeVersion:
    description: 'Specify Nodejs version'
    required: false
    default: '22'
  pnpmVersion:
    description: 'Specify pnpm version'
    required: false
  denoVersion:
    description: 'Specify Deno version'
    required: false
    default: 'v2.x'

runs:
  using: composite
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.nodeVersion }}

    - uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpmVersion }}
        run_install: |
          - args: [--global, node-jq, turbo]

    - name: Get pnpm store directory
      run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      shell: bash

    - uses: actions/cache@v4
      name: Setup pnpm cache
      id: pnpm-cache
      with:
        path: ${{ env.PNPM_STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-node-${{ inputs.nodeVersion }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: ${{ runner.os }}-pnpm-store-node-${{ inputs.nodeVersion }}-

    - if: ${{ steps.pnpm-cache.outputs.cache-hit != 'true' }}
      run: echo "PNPM_CACHED=$([ -d "node_modules" ] && echo "true" || echo "false")" >> $GITHUB_ENV
      shell: bash

    - uses: denoland/setup-deno@v2
      name: Install Deno v2
      with:
        deno-version: ${{ inputs.denoVersion }}
