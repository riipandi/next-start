{
    "extends": [
        "next/core-web-vitals",
        "plugin:@typescript-eslint/recommended",
        "plugin:tailwindcss/recommended"
    ],
    "ignorePatterns": [
        "node_modules",
        ".next",
        ".cache",
        "build",
        "dist",
        "out",
        "database/migration/schema.ts"
    ],
    "settings": {
        "tailwindcss": {
            "officialSorting": true
        }
    },
    "plugins": ["@typescript-eslint", "simple-import-sort", "react-hooks"],
    "rules": {
        "no-console": "warn",
        "react/jsx-key": "off",
        "import/no-anonymous-default-export": "off",
        "tailwindcss/no-custom-classname": "off",
        "@next/next/no-html-link-for-pages": "off",
        "@next/next/no-img-element": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_",
                "caughtErrorsIgnorePattern": "^_"
            }
        ],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn"
    },
    "overrides": [
        {
            "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
            "rules": {
                "simple-import-sort/exports": "warn",
                "simple-import-sort/imports": [
                    "error",
                    {
                        "groups": [
                            // Packages `react` related packages come first.
                            ["^dotenv", "^react", "^next(?!/?$)", "^@?\\w"],
                            // Internal packages.
                            ["^(@|components)(/.*|$)"],
                            // Side effect imports.
                            ["^\\u0000"],
                            // Parent imports. Put `..` last.
                            ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                            // Other relative imports. Put same-folder imports and `.` last.
                            ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
                            // Style imports.
                            ["^.+\\.?(css)$"]
                        ]
                    }
                ]
            }
        }
    ],
    "globals": {
        "React": true,
        "JSX": true
    }
}
